<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kenya.dao.RecruitMapper">
	<resultMap id="BaseResultMap" type="com.kenya.bean.Recruit">
		<id column="recruitId" jdbcType="INTEGER" property="recruitid" />
		<result column="companyName" jdbcType="VARCHAR" property="companyname" />
		<result column="companyOperating" jdbcType="VARCHAR" property="companyoperating" />
		<result column="companyStationSalary" jdbcType="DOUBLE"
			property="companystationsalary" />
		<result column="companyCallNumber" jdbcType="VARCHAR" property="companycallnumber" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.kenya.bean.RecruitWithBLOBs">
		<result column="companyStationDetailed" jdbcType="LONGVARCHAR"
			property="companystationdetailed" />
		<result column="companyAddress" jdbcType="LONGVARCHAR"
			property="companyaddress" />
		<result column="companyDetailed" jdbcType="LONGVARCHAR"
			property="companydetailed" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		recruitId, companyName, companyOperating, companyStationSalary,
		companyCallNumber
	</sql>
	<sql id="Blob_Column_List">
		companyStationDetailed, companyAddress, companyDetailed
	</sql>
	<select id="selectByExampleWithBLOBs" parameterType="com.kenya.bean.RecruitExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from recruit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.kenya.bean.RecruitExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from recruit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from recruit
		where recruitId = #{recruitid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from recruit
		where recruitId = #{recruitid,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.kenya.bean.RecruitExample">
		delete from recruit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.kenya.bean.RecruitWithBLOBs">
		insert into recruit (recruitId, companyName, companyOperating,
		companyStationSalary, companyCallNumber,
		companyStationDetailed, companyAddress,
		companyDetailed)
		values (#{recruitid,jdbcType=INTEGER}, #{companyname,jdbcType=VARCHAR},
		#{companyoperating,jdbcType=VARCHAR},
		#{companystationsalary,jdbcType=DOUBLE},
		#{companycallnumber,jdbcType=VARCHAR},
		#{companystationdetailed,jdbcType=LONGVARCHAR},
		#{companyaddress,jdbcType=LONGVARCHAR},
		#{companydetailed,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.kenya.bean.RecruitWithBLOBs">
		insert into recruit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="recruitid != null">
				recruitId,
			</if>
			<if test="companyname != null">
				companyName,
			</if>
			<if test="companyoperating != null">
				companyOperating,
			</if>
			<if test="companystationsalary != null">
				companyStationSalary,
			</if>
			<if test="companycallnumber != null">
				companyCallNumber,
			</if>
			<if test="companystationdetailed != null">
				companyStationDetailed,
			</if>
			<if test="companyaddress != null">
				companyAddress,
			</if>
			<if test="companydetailed != null">
				companyDetailed,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="recruitid != null">
				#{recruitid,jdbcType=INTEGER},
			</if>
			<if test="companyname != null">
				#{companyname,jdbcType=VARCHAR},
			</if>
			<if test="companyoperating != null">
				#{companyoperating,jdbcType=VARCHAR},
			</if>
			<if test="companystationsalary != null">
				#{companystationsalary,jdbcType=DOUBLE},
			</if>
			<if test="companycallnumber != null">
				#{companycallnumber,jdbcType=VARCHAR},
			</if>
			<if test="companystationdetailed != null">
				#{companystationdetailed,jdbcType=LONGVARCHAR},
			</if>
			<if test="companyaddress != null">
				#{companyaddress,jdbcType=LONGVARCHAR},
			</if>
			<if test="companydetailed != null">
				#{companydetailed,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.kenya.bean.RecruitExample"
		resultType="java.lang.Long">
		select count(*) from recruit
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update recruit
		<set>
			<if test="record.recruitid != null">
				recruitId = #{record.recruitid,jdbcType=INTEGER},
			</if>
			<if test="record.companyname != null">
				companyName = #{record.companyname,jdbcType=VARCHAR},
			</if>
			<if test="record.companyoperating != null">
				companyOperating = #{record.companyoperating,jdbcType=VARCHAR},
			</if>
			<if test="record.companystationsalary != null">
				companyStationSalary = #{record.companystationsalary,jdbcType=DOUBLE},
			</if>
			<if test="record.companycallnumber != null">
				companyCallNumber = #{record.companycallnumber,jdbcType=VARCHAR},
			</if>
			<if test="record.companystationdetailed != null">
				companyStationDetailed = #{record.companystationdetailed,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.companyaddress != null">
				companyAddress = #{record.companyaddress,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.companydetailed != null">
				companyDetailed = #{record.companydetailed,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update recruit
		set recruitId = #{record.recruitid,jdbcType=INTEGER},
		companyName = #{record.companyname,jdbcType=VARCHAR},
		companyOperating = #{record.companyoperating,jdbcType=VARCHAR},
		companyStationSalary = #{record.companystationsalary,jdbcType=DOUBLE},
		companyCallNumber = #{record.companycallnumber,jdbcType=VARCHAR},
		companyStationDetailed =
		#{record.companystationdetailed,jdbcType=LONGVARCHAR},
		companyAddress = #{record.companyaddress,jdbcType=LONGVARCHAR},
		companyDetailed = #{record.companydetailed,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update recruit
		set recruitId = #{record.recruitid,jdbcType=INTEGER},
		companyName = #{record.companyname,jdbcType=VARCHAR},
		companyOperating = #{record.companyoperating,jdbcType=VARCHAR},
		companyStationSalary = #{record.companystationsalary,jdbcType=DOUBLE},
		companyCallNumber = #{record.companycallnumber,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.kenya.bean.RecruitWithBLOBs">
		update recruit
		<set>
			<if test="companyname != null">
				companyName = #{companyname,jdbcType=VARCHAR},
			</if>
			<if test="companyoperating != null">
				companyOperating = #{companyoperating,jdbcType=VARCHAR},
			</if>
			<if test="companystationsalary != null">
				companyStationSalary = #{companystationsalary,jdbcType=DOUBLE},
			</if>
			<if test="companycallnumber != null">
				companyCallNumber = #{companycallnumber,jdbcType=VARCHAR},
			</if>
			<if test="companystationdetailed != null">
				companyStationDetailed = #{companystationdetailed,jdbcType=LONGVARCHAR},
			</if>
			<if test="companyaddress != null">
				companyAddress = #{companyaddress,jdbcType=LONGVARCHAR},
			</if>
			<if test="companydetailed != null">
				companyDetailed = #{companydetailed,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where recruitId = #{recruitid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kenya.bean.RecruitWithBLOBs">
		update recruit
		set companyName = #{companyname,jdbcType=VARCHAR},
		companyOperating = #{companyoperating,jdbcType=VARCHAR},
		companyStationSalary = #{companystationsalary,jdbcType=DOUBLE},
		companyCallNumber = #{companycallnumber,jdbcType=VARCHAR},
		companyStationDetailed = #{companystationdetailed,jdbcType=LONGVARCHAR},
		companyAddress = #{companyaddress,jdbcType=LONGVARCHAR},
		companyDetailed = #{companydetailed,jdbcType=LONGVARCHAR}
		where recruitId = #{recruitid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.kenya.bean.Recruit">
		update recruit
		set companyName = #{companyname,jdbcType=VARCHAR},
		companyOperating = #{companyoperating,jdbcType=VARCHAR},
		companyStationSalary = #{companystationsalary,jdbcType=DOUBLE},
		companyCallNumber = #{companycallnumber,jdbcType=VARCHAR}
		where recruitId = #{recruitid,jdbcType=INTEGER}
	</update>
</mapper>